{
  "name": "Docker Compose(VS Code in Container) local test",
  // VS Code で開きたいコンテナ
  "dockerComposeFile": [
    "docker-compose.yml"
  ],
  // 'service' プロパティは、VS Code が使用すべきコンテナのサービス名
	"service": "local_test",
  // オプションの 'workspaceFolder' プロパティは、VS Code が接続時にデフォルトで開くべきパス
  // パスを"/" にしても VS Code は 同じ場所を開く Dockerfile で WORKDIR を指定してるから?
  // 指定しなくても変わらなかった 分からないから一旦放置する
	"workspaceFolder": "/test",
  "customizations": {
    "vscode": {
      // コンテナ内の VS Code で使いたい拡張機能
      "extensions": [
        // golang のデバックする拡張機能
        // 様々な モジュールが追加で必要だが コンテナ内の VS Code を開いて 通知欄から install All をしてコンテナ削除しない運用にする
        "golang.go",
        // git の履歴が確認できる拡張機能(ホスト側だけの拡張が推奨) 視覚的に見やすくしたいから
        "donjayamanne.githistory",
        // 開いてるファイルたちを保存する拡張機能
        "amodio.restore-editors",
        // svelte 用の拡張機能
        "svelte.svelte-vscode"
      ]
    }
  },
  // VS Code の go の拡張機能(golang.go)を使うときに 毎回表示されるのが面倒だから先にインストールしておく
  // だが下記に書いたよりもモジュール数が多いため コンテナを削除しないという運用にする
  // "postCreateCommand": "go install -v golang.org/x/tools/gopls@latest && go install -v github.com/ramya-rao-a/go-outline@latest"
  "postCreateCommand": "go install -v golang.org/x/tools/gopls@latest"
}
